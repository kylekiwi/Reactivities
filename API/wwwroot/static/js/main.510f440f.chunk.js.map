{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/from/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSideBar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateFollowing","listFollowings","predicate","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","act","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","profile","loadingProfile","uploading","followings","loadingFollowings","activeTab","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","activityStore","followingCount","propfile","loadFollowings","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","err","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","name","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","e","preventDefault","handleFollow","Card","Description","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","basic","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","length","relaxed","divided","Extra","ActivityDetailedSideBar","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","Tab","Pane","itemsPerRow","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","isCurrentUser","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","panes","menuItem","menu","menuPosition","onTabChange","activeIndex","Statistic","Divider","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.510f440f.chunk.js","sourcesContent":["export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  data: T;\n  pagination: Pagination;\n\n  constructor(data: T, pagination: Pagination) {\n    this.data = data;\n    this.pagination = pagination;\n  }\n}\n\nexport class PagingParams {\n  pageNumber;\n  pageSize;\n  \n  constructor(pageNumber = 1, pageSize = 2){\n    this.pageNumber = pageNumber;\n    this.pageSize = pageSize;\n  }\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\nimport { Activity, ActivityFormValues } from \"../models/activity\";\nimport { PaginatedResult } from \"../models/pagination\";\nimport { Photo, Profile } from \"../models/profile\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"../stores/store\";\n\nconst sleep = (delay: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n};\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use((config) => {\n  const token = store.commonStore.token;\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\naxios.interceptors.response.use(\n  async (response) => {\n    if(process.env.NODE_ENV === 'development') await sleep(1000);\n    const pagination = response.headers[\"pagination\"];\n    if (pagination) {\n      response.data = new PaginatedResult(\n        response.data,\n        JSON.parse(pagination)\n      );\n      return response as AxiosResponse<PaginatedResult<any>>;\n    }\n    return response;\n  },\n  (error: AxiosError) => {\n    const { data, status, config } = error.response!;\n    switch (status) {\n      case 400:\n        if (typeof data === \"string\") {\n          toast.error(\"bad request\");\n        }\n        if (config.method === \"GET\" && data.errors.hasOwnProperty(\"id\")) {\n          history.push(\"not-found\");\n        }\n        if (data.errors) {\n          const modalStateErrors = [];\n          for (const key in data.errors) {\n            if (data.errors[key]) {\n              modalStateErrors.push(data.errors[key]);\n            }\n          }\n          throw modalStateErrors.flat();\n        }\n        break;\n      case 401:\n        toast.error(\"unauthorized\");\n        break;\n      case 404:\n        // history.push('/not-found')\n        history.push(\"/not-found\");\n        toast.error(\"not found\");\n        break;\n      case 500:\n        store.commonStore.setServerError(data);\n        history.push(\"/server-error\");\n        // toast.error('server error');\n        break;\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\nconst requests = {\n  // get: function<T>(url: string) .........\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\n  post: <T>(url: string, body: {}) =>\n    axios.post<T>(url, body).then(responseBody),\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n};\n\nconst Activities = {\n  // list: () => requests.get<Activity[]>('/activities'),\n  list: (params: URLSearchParams) =>\n    axios\n      .get<PaginatedResult<Activity[]>>(\"/activities\", { params })\n      .then(responseBody),\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\n  create: (activity: ActivityFormValues) =>\n    requests.post<void>(\"/activities\", activity),\n  update: (activity: ActivityFormValues) =>\n    requests.put<void>(`/activities/${activity.id}`, activity),\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\n};\n\nconst Account = {\n  current: () => requests.get<User>(\"/account\"),\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\n  register: (user: UserFormValues) =>\n    requests.post<User>(\"/account/register\", user),\n};\n\nconst Profiles = {\n  get: (username: string) => requests.get<Profile>(`profiles/${username}`),\n  uploadPhoto: (file: Blob) => {\n    let formData = new FormData();\n    formData.append(\"File\", file);\n    return axios.post<Photo>(\"photos\", formData, {\n      headers: { \"Content-type\": \"multipart/form-data\" },\n    });\n  },\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\n  // updateProfile: (profile: Partial<Profile>) => requests.put(`/profiles`, profile),\n  updateFollowing: (username: string) =>\n    requests.post(`/follow/${username}`, {}),\n  listFollowings: (username: string, predicate: string) =>\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n};\n\nconst agent = {\n  Activities,\n  Account,\n  Profiles,\n};\n\nexport default agent;\n","import { Profile } from \"./profile\";\n\nexport interface Activity {\n\tid: string;\n\ttitle: string;\n\t// date: string;\n\tdate: Date | null;\n\tdescription: string;\n\tcategory: string;\n\tcity: string;\n\tvenue: string;\n\thostUsername: string;\n  isCancelled: boolean;\n  isGoing: boolean;\n  isHost: boolean;\n  host?: Profile;\n  attendees: Profile[];\n}\n\nexport class Activity implements Activity{\n  constructor(init?: ActivityFormValues){\n    Object.assign(this, init);\n  }\n}\n\nexport class ActivityFormValues {\n  id?: string = undefined;\n  title: string = '';\n  category: string = '';\n  description: string = '';\n  date: Date | null = null;\n  city: string = '';\n  venue: string = '';\n\n  constructor(activity?: ActivityFormValues){\n    if (activity){\n      this.id = activity.id;\n      this.title= activity.title;\n      this.category = activity.category;\n      this.description = activity.description;\n      this.date = activity.date;\n      this.city = activity.city;\n      this.venue = activity.venue;\n    }\n  }\n}","import { User } from \"./user\";\n\nexport interface Profile{\n  username: string;\n  displayName: string;\n  image?: string;\n  bio?: string;\n  followersCount: number;\n  followingCount: number;\n  following: boolean;\n  photos?: Photo[];\n}\nexport class Profile implements Profile{\n  constructor(user:User){\n    this.username = user.username;\n    this.displayName = user.displayName;\n    this.image = user.image;\n  }\n}\n\nexport interface Photo{\n  id: string;\n  url: string;\n  isMain: boolean;\n  \n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Activity, ActivityFormValues } from \"../models/activity\";\nimport { format } from \"date-fns\";\nimport { store } from \"./store\";\nimport { Profile } from \"../models/profile\";\nimport { Pagination, PagingParams } from \"../models/pagination\";\n\nexport default class ActivityStore {\n  // activities: Activity[] = [];\n  activityRegistry = new Map<string, Activity>();\n  selectedActivity: Activity | undefined = undefined;\n  editMode = false;\n  loading = false;\n  loadingInitial = false;\n  pagination: Pagination | null = null;\n  pagingParams = new PagingParams();\n  predicate = new Map().set('all', true);\n\n  constructor() {\n    makeAutoObservable(this);\n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.pagingParams = new PagingParams();\n        this.activityRegistry.clear();\n        this.loadActivities();\n      }\n    )\n  }\n  \n  setPagingParams = (pagingParams: PagingParams) => {\n    this.pagingParams = pagingParams;\n  }\n\n  setPredicate = (predicate: string, value: string | Date) => {\n    const resetPredicate = () => {\n      this.predicate.forEach((value, key) => {\n        if(key !== 'startDate') this.predicate.delete(key);\n      })\n    };\n    switch (predicate) {\n      case 'all': \n        resetPredicate();\n        this.predicate.set('all', true);\n        break;\n      case 'isGoing':\n        resetPredicate();\n        this.predicate.set('isGoing', true);\n        break;\n      case 'isHost':\n        resetPredicate();\n        this.predicate.set('isHost', true);\n        break;\n      case 'startDate':\n        this.predicate.delete('startDate');\n        this.predicate.set('startDate', value);\n    }\n  }\n\n  get axiosParams() {\n    const params = new URLSearchParams();\n    params.append('pageNumber', this.pagingParams.pageNumber.toString());\n    params.append('pageSize', this.pagingParams.pageSize.toString());\n    this.predicate.forEach((value, key) => {\n      if(key === 'startDate'){\n        params.append(key, (value as Date).toISOString())\n      } else {\n        params.append(key, value);\n      }\n    })\n    return params;\n  }\n\n  get activitiesByDate() {\n    return Array.from(this.activityRegistry.values()).sort(\n      (a, b) => a.date!.getTime() - b.date!.getTime()\n    );\n  }\n\n  get groupedActivities() {\n    return Object.entries(\n      this.activitiesByDate.reduce((activities, activity) => {\n        // const date = activity.date!.toISOString().split('T')[0];\n        const date = format(activity.date!, \"dd MMM yyyy\");\n        activities[date] = activities[date]\n          ? [...activities[date], activity]\n          : [activity];\n        return activities;\n      }, {} as { [key: string]: Activity[] })\n    );\n  }\n\n  loadActivities = async () => {\n    this.loadingInitial = true;\n    try {\n      const result = await agent.Activities.list(this.axiosParams);\n      result.data.forEach((act) => {\n        this.setActivity(act);\n      });\n      this.setPagination(result.pagination);\n      this.setLoadingInitial(false);\n    } catch (error) {\n      console.log(error);\n      this.setLoadingInitial(false);\n    }\n  };\n  \n  setPagination = (pagination: Pagination) => {\n    this.pagination = pagination\n  }\n\n  loadActivity = async (id: string) => {\n    let activity = this.getActivity(id);\n\n    if (activity) {\n      this.selectedActivity = activity;\n      return activity;\n    } else {\n      this.loadingInitial = true;\n      try {\n        activity = await agent.Activities.details(id);\n        this.setActivity(activity);\n        runInAction(() => {\n          this.selectedActivity = activity;\n        });\n        this.setLoadingInitial(false);\n        return activity;\n      } catch (error) {\n        console.log(error);\n        this.setLoadingInitial(false);\n      }\n    }\n  };\n\n  private setActivity = (act: Activity) => {\n    const user = store.userStore.user;\n    if (user) {\n      act.isGoing = act.attendees!.some((a) => a.username === user.username);\n      act.isHost = act.hostUsername === user.username;\n      act.host = act.attendees?.find((x) => x.username === act.hostUsername);\n    }\n    // act.date = act.date.split(\"T\")[0];\n    act.date = new Date(act.date!);\n    this.activityRegistry.set(act.id, act);\n  };\n\n  private getActivity = (id: string) => {\n    return this.activityRegistry.get(id);\n  };\n\n  setLoadingInitial = (state: boolean) => {\n    this.loadingInitial = state;\n  };\n\n  createActivity = async (activity: ActivityFormValues ) => {\n    const user = store.userStore.user;\n    const attendee = new Profile(user!);\n\n    try {\n      await agent.Activities.create(activity);\n      const newActivity = new Activity(activity);\n      newActivity.hostUsername = user!.username;\n      newActivity.attendees = [attendee];\n      this.setActivity(newActivity);\n      runInAction(() => {\n        this.selectedActivity = newActivity;\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  updateActivity = async (activity: ActivityFormValues) => {\n    try {\n      await agent.Activities.update(activity);\n      runInAction(() => {\n        if(activity.id){\n          let updateActivity = {...this.getActivity(activity.id), ...activity}\n          this.activityRegistry.set(activity.id, updateActivity as Activity);\n          this.selectedActivity = updateActivity as Activity;\n        }\n        // this.activities = [...this.activities.filter(a=>a.id!==activity.id), activity];\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  deleteActivity = async (id: string) => {\n    this.loading = true;\n    try {\n      await agent.Activities.delete(id);\n      runInAction(() => {\n        // this.activities = [...this.activities.filter(a=>a.id!==id)];\n        this.activityRegistry.delete(id);\n        this.loading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  updateAttendance = async () => {\n    const user = store.userStore.user;\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        if (this.selectedActivity?.isGoing) {\n          this.selectedActivity.attendees =\n            this.selectedActivity.attendees?.filter(\n              (a) => a.username !== user?.username\n            );\n          this.selectedActivity.isGoing = false;\n        } else {\n          const attendee = new Profile(user!);\n          this.selectedActivity?.attendees?.push(attendee);\n          this.selectedActivity!.isGoing = true;\n        }\n        this.activityRegistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  cancelActivityToggle = async () => {\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(()=>{\n        this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\n      })\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(()=>this.loading=false);\n    }\n  }\n  \n  clearSelectedActivity = () => {\n    this.selectedActivity = undefined;\n  }\n  \n  updateAttendeeFollowing = (username: string) => {\n    this.activityRegistry.forEach(activity => {\n      activity.attendees.forEach(attendee => {\n        if(attendee.username === username){\n          attendee.following ? attendee.followersCount-- : attendee.followersCount++\n          attendee.following = !attendee.following;\n        }\n      })\n    })\n  }\n\n}\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Photo, Profile } from \"../models/profile\";\nimport { store } from \"./store\";\n\nexport default class ProfileStore {\n  profile: Profile | null = null;\n  loadingProfile = false;\n  uploading = false;\n  loading = false;\n  followings: Profile[] = [];\n  loadingFollowings = false;\n  activeTab = 0;\n\n  constructor() {\n    makeAutoObservable(this);\n    reaction(\n      () => this.activeTab,\n      activeTab => {\n        if(activeTab === 3 || activeTab === 4){\n          const predicate = activeTab === 3 ? 'followers' : 'following'\n          this.loadFollowings(predicate);\n        } else {\n          this.followings = [];\n        }\n      }\n    );\n  }\n\n  setActiveTab = (activeTab: any) => {\n    this.activeTab = activeTab;\n  }\n  \n  get isCurrentUser() {\n    if(store.userStore.user && this.profile){\n      return store.userStore.user.username === this.profile.username;\n    }\n    return false;\n  }\n  \n  loadProfile = async (username: string) => {\n    this.loadingProfile = true;\n    try {\n      const profile = await agent.Profiles.get(username);\n      runInAction(()=>{\n        this.profile = profile;\n        this.loadingProfile = false;\n      })\n    } catch (error) {\n      console.log(error);\n      runInAction(()=>this.loadingProfile = false);\n    }\n  }\n  \n  uploadPhoto = async (file: Blob) => {\n    this.uploading = true;\n    try {\n      const response = await agent.Profiles.uploadPhoto(file);\n      const photo = response.data;\n      runInAction(()=>{\n        if(this.profile){\n          this.profile.photos?.push(photo);\n          if(photo.isMain && store.userStore.user){\n            store.userStore.setImage(photo.url);\n            this.profile.image = photo.url;\n          }\n        }\n        this.uploading=false;\n      })\n    } catch (error) {\n      console.log(error);\n      runInAction(()=>this.uploading=false);\n    }\n  }\n  \n  setMainPhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.setMainPhoto(photo.id);\n      store.userStore.setImage(photo.url);\n      runInAction(()=>{\n        if(this.profile && this.profile.photos){\n          this.profile.photos.find(p => p.isMain)!.isMain = false;\n          this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\n          this.profile.image = photo.url;\n          this.loading = false;\n        }\n      })\n    } catch (error) {\n      runInAction(()=>this.loading = false)\n      console.log(error);\n    }\n  }\n  \n  deletePhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.deletePhoto(photo.id);\n      runInAction(()=>{\n        if(this.profile){\n          this.profile.photos = this.profile.photos?.filter(p=>p.id!==photo.id);\n          this.loading = false;\n        }\n      })\n    } catch (error) {\n      runInAction(()=>this.loading=false);\n      console.log(error);\n      \n    }\n  }\n  \n  updateFollowing = async (username: string, following: boolean) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.updateFollowing(username);\n      store.activityStore.updateAttendeeFollowing(username);\n      runInAction(()=>{\n        if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username !== username){\n          following ? this.profile.followersCount++ : this.profile.followersCount--;\n          this.profile.following = !this.profile.following;\n        }\n        if(this.profile && this.profile.username === store.userStore.user?.username){\n          following ? this.profile.followingCount++ : this.profile.followingCount--;\n        }\n        this.followings.forEach(propfile => {\n          if(propfile.username === username){\n            propfile.following ? propfile.followersCount-- : propfile.followersCount++;\n            propfile.following = !propfile.following;\n          }\n        })\n        this.loading=false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(()=>this.loading=false);\n    }\n  }\n\n  loadFollowings = async (predicate: string) => {\n    this.loadingFollowings = true;\n    try {\n      const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\n      runInAction(() => {\n        this.followings = followings;\n        this.loadingFollowings = false;\n      })\n    } catch (error) {\n      console.log(error);\n      runInAction(() => this.loadingFollowings = false);\n    }\n    \n  }\n}","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { history } from \"../..\";\nimport agent from \"../api/agent\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"./store\";\n\nexport default class UserStore {\n  user: User | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  get isLoggedIn() {\n    return !!this.user;\n  }\n\n  login = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.login(creds);\n      store.commonStore.setToken(user.token);\n      runInAction(() => (this.user = user));\n      history.push(\"/activities\");\n      store.modalStore.closeModal();\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  logout = () => {\n    store.commonStore.setToken(null);\n    window.localStorage.removeItem(\"jwt\");\n    this.user = null;\n    history.push(\"/\");\n  };\n\n  getUser = async () => {\n    try {\n      const user = await agent.Account.current();\n      runInAction(() => (this.user = user));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  register = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.register(creds);\n      store.commonStore.setToken(user.token);\n      runInAction(() => (this.user = user));\n      history.push(\"/activities\");\n      store.modalStore.closeModal();\n    } catch (err) {\n      throw err;\n    }\n  };\n  \n  setImage = (image: string) => {\n    if(this.user) this.user.image = image;\n  }\n}\n","import { createContext, useContext } from \"react\";\nimport ActivityStore from \"./activityStore\";\nimport CommentStore from \"./commentStore\";\nimport CommonStore from \"./commonStore\";\nimport ModalStore from \"./modalStore\";\nimport ProfileStore from \"./profileStore\";\nimport UserStore from \"./userStore\";\n\ninterface Store{\n\tactivityStore: ActivityStore;\n\tcommonStore: CommonStore;\n\tuserStore: UserStore;\n\tmodalStore: ModalStore;\n\tprofileStore: ProfileStore;\n\tcommentStore: CommentStore;\n}\n\nexport const store: Store = {\n\tactivityStore: new ActivityStore(),\n  commonStore: new CommonStore(),\n  userStore: new UserStore(),\n  modalStore: new ModalStore(),\n  profileStore: new ProfileStore(),\n\tcommentStore: new CommentStore(),\n}\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n\treturn useContext(StoreContext);\n}\n","import { makeAutoObservable, reaction } from \"mobx\";\nimport { ServerError } from \"../models/serverError\";\n\nexport default class CommonStore{\n  error: ServerError | null = null;\n  token: string | null = window.localStorage.getItem('jwt');\n  appLoaded = false;\n  \n  constructor(){\n    makeAutoObservable(this);\n    reaction(\n      () => this.token,\n      token => {\n        if(token){\n          window.localStorage.setItem('jwt', token);\n        } else {\n          window.localStorage.removeItem('jwt');\n        }\n      }\n    )\n  }\n\n  setServerError = (error: ServerError) =>{\n    this.error = error;\n  }\n  \n  setToken = (token: string | null) => {\n    this.token = token; //this will call reaction\n  }\n\n  setAppLoaded = () => {\n    this.appLoaded = true;\n  }\n}","import { makeAutoObservable } from \"mobx\"\ninterface Modal{\n  open: boolean;\n  body: JSX.Element | null;\n}\n\nexport default class ModalStore{\n  modal : Modal = {\n    open: false,\n    body: null\n  };\n  \n  constructor(){\n    makeAutoObservable(this);\n  }\n\n  openModal = (content: JSX.Element) => {\n    this.modal.open = true;\n    this.modal.body = content;\n  };\n  \n  closeModal = () => {\n    this.modal.open = false;\n    this.modal.body = null;\n  };\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\nimport { makeAutoObservable, runInAction } from \"mobx\";\nimport { ChatComment } from \"../models/comment\";\nimport { store } from \"./store\";\n\nexport default class CommentStore {\n  comments: ChatComment[] = [];\n  hubConnection: HubConnection | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  createHubConnection = (activityId: string) => {\n    if(store.activityStore.selectedActivity) {\n      this.hubConnection = new HubConnectionBuilder()\n        .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\n          accessTokenFactory: () => store.userStore.user?.token!\n        })\n        .withAutomaticReconnect()\n        .configureLogging(LogLevel.Information)\n        .build();\n\n      this.hubConnection.start().catch(err => console.log('Error establishing the connection: ', err));\n      \n      this.hubConnection.on('LoadComments', (comments:ChatComment[]) => {\n        runInAction(() => {\n          comments.forEach(comment => {\n            comment.createdAt = new Date(comment.createdAt + 'Z');\n          })\n          this.comments = comments\n        }\n        );\n      });\n\n      this.hubConnection.on('ReceiveComment', (comment:ChatComment) =>{\n        runInAction(()=>{\n          comment.createdAt = new Date(comment.createdAt);\n          this.comments.unshift(comment);\n        });\n      });\n    }\n  }\n\n  stopHubConnection = () => {\n    this.hubConnection?.stop().catch(err=>console.log('Error stopping connection: ', err));\n  }\n  \n  clearComments = () => {\n    this.comments = [];\n    this.stopHubConnection();\n  }\n  \n  addComment = async (values: any) => {\n    values.activityId = store.activityStore.selectedActivity?.id;\n    try {\n      await this.hubConnection?.invoke('SendComment', values);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { Button, Container, Menu, Image, Dropdown } from 'semantic-ui-react';\nimport { useStore } from '../stores/store';\n\nconst NavBar = () => {\n  const {userStore: {user, logout}} = useStore();\n\treturn (\n\t\t<Menu inverted fixed='top'>\n\t\t\t<Container>\n\t\t\t\t<Menu.Item as={NavLink} to='/' exact header>\n\t\t\t\t\t<img src=\"/assets/logo.png\" alt=\"logo\" style={{marginRight: '10px'}}/>\n\t\t\t\t\tReactivities\n\t\t\t\t</Menu.Item>\n\t\t\t\t<Menu.Item as={NavLink} to='/activities' name='Activities'/>\n\t\t\t\t<Menu.Item as={NavLink} to='/errors' name='Errors'/>\n\t\t\t\t<Menu.Item>\n\t\t\t\t\t<Button as={NavLink} to='/createActivity' positive content='Create Activity' />\n\t\t\t\t</Menu.Item>\n\t\t\t\t<Menu.Item position='right'>\n          <Image src={user?.image || '/assets/user.png'} avatar spaced='right' />\n          <Dropdown pointing='top left' text={user?.displayName}>\n            <Dropdown.Menu>\n              <Dropdown.Item as={Link} to={`/profiles/${user?.username}`} \n                text='My profile' icon='user' />\n              <Dropdown.Item onClick={logout} text='Logout' icon='power' />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Item>\n\t\t\t</Container>\n\t\t</Menu>\n\t);\n};\n\nexport default observer(NavBar);","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport Calendar from 'react-calendar';\nimport { Header, Menu } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\n\nconst ActivityFilters = () => {\n  const {activityStore: {predicate, setPredicate}} = useStore();\n\treturn (\n\t\t<>\n\t\t\t<Menu vertical size='large' style={{width: '100%', marginTop:25}}>\n\t\t\t\t<Header icon='filter' attached color='teal' content='Filters' />\n\t\t\t\t<Menu.Item \n          content='All Activities'\n          active={predicate.has('all')}\n          onClick={() => setPredicate('all', 'true')}\n        />\n\t\t\t\t<Menu.Item \n          content=\"I'm going\"\n          active={predicate.has('isGoing')}\n          onClick={() => setPredicate('isGoing', 'true')}\n        />\n\t\t\t\t<Menu.Item \n          content=\"I'm hosting\"\n          active={predicate.has('isHost')}\n          onClick={() => setPredicate('isHost', 'true')}\n        />\n\t\t\t</Menu>\n\t\t\t<Header />\n\t\t\t<Calendar \n        onChange={(date) => setPredicate('startDate', date as Date)}\n        value = {predicate.get('startDate') || new Date()}\n      />\n\t\t</>\n\t\t\n\t);\n};\n\nexport default observer(ActivityFilters);","import { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent } from \"react\";\nimport { Button, Reveal } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props {\n  profile: Profile;\n}\n\nconst FollowButton = ({profile}: Props) => {\n  const {profileStore, userStore} = useStore();\n  const {updateFollowing, loading} = profileStore;\n  \n  if(userStore.user?.username === profile.username) return null;\n  \n  function handleFollow(e: SyntheticEvent, username: string){\n    e.preventDefault();\n    profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\n  }\n\n  return (\n    <Reveal animated=\"move\">\n      <Reveal.Content visible style={{ width: \"100%\" }}>\n        <Button \n          fluid \n          color=\"teal\" \n          content={profile.following ? 'Following' : 'Not following'}\n        />\n      </Reveal.Content>\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\n        <Button\n          fluid\n          color={profile.following ? \"red\" : \"green\"}\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\n          loading={loading}\n          onClick={(e) => handleFollow(e, profile.username)}\n        />\n      </Reveal.Content>\n    </Reveal>\n  );\n};\n\nexport default observer(FollowButton);\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport FollowButton from './FollowButton';\n\ninterface Props {\n  profile: Profile;\n}\n\nconst ProfileCard = ({profile}: Props) => {\n  return (\n    <Card as={Link} to={`/profiles/${profile.username}`}>\n      <Image src={profile.image || 'assets/user.png'} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n        <Card.Description>Bio goes here</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name='user' />\n        {profile.followersCount} followers\n      </Card.Content>\n      <FollowButton profile={profile} />\n    </Card>\n  );\n};\n\nexport default observer(ProfileCard);","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Image, List, Popup } from 'semantic-ui-react';\nimport { Profile } from '../../../app/models/profile';\nimport ProfileCard from '../../profiles/ProfileCard';\n\ninterface Props{\n  attendees: Profile[];\n}\n\nconst ActivityListItemAttendee = ({attendees}:Props) => {\n  const styles = {\n    borderColor: 'orange',\n    borderWidth: 3\n  }\n  return (\n    <List horizontal>\n      {attendees.map(attendee =>(\n        <Popup\n          hoverable\n          key={attendee.username}\n          trigger={\n            <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\n              <Image \n                size='mini' \n                circular src={attendee.image || '/assets/user.png'}\n                bordered\n                style = {attendee.following ? styles : null}\n              />\n            </List.Item>\n          }\n        >\n          <Popup.Content>\n            <ProfileCard profile={attendee} />\n          </Popup.Content>\n          \n        </Popup>\n      ))}\n    </List>\n  );\n};\n\nexport default observer(ActivityListItemAttendee);","import { Link } from \"react-router-dom\";\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport {format} from 'date-fns';\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\n\ninterface Props{\n\tactivity: Activity\n}\n\nconst ActivityListItem = ({activity}:Props) => {\n\n  return (\n\t\t<Segment.Group>\n      {activity.isCancelled && \n        <Label attached='top' color='red' content='Cancelled' style={{textAlign:'center'}} />\n      }\n\t\t\t<Segment>\n\t\t\t\t<Item.Group>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<Item.Image style={{marginBottom: 3}} size = 'tiny' circular src = '/assets/user.png'/>\n\t\t\t\t\t\t<Item.Content>\n\t\t\t\t\t\t\t<Item.Header as={Link} to={`/activities/${activity.id}`}>\n\t\t\t\t\t\t\t\t{activity.title}\n\t\t\t\t\t\t\t</Item.Header>\n\t\t\t\t\t\t\t<Item.Description>\n                Hosted by <Link to={`/profiles/${activity.hostUsername}`}>{activity.host?.displayName}</Link>  \n              </Item.Description>\n              {activity.isHost && (\n                <Item.Description>\n                  <Label basic color='orange'>\n                    Your are hosting this activity\n                  </Label>\n                </Item.Description>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <Item.Description>\n                  <Label basic color='green'>\n                    Your are going to this activity\n                  </Label>\n                </Item.Description>\n              )}\n\t\t\t\t\t\t</Item.Content>\n\t\t\t\t\t</Item>\n\t\t\t\t</Item.Group>\n\t\t\t</Segment>\n\t\t\t<Segment>\n\t\t\t\t<span>\n\t\t\t\t\t<Icon name='clock'/> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n\t\t\t\t\t<Icon name='marker'/> {activity.venue}\n\t\t\t\t</span>\n\t\t\t</Segment>\n\t\t\t<Segment secondary>\n        <ActivityListItemAttendee attendees={activity.attendees!} />\n\t\t\t</Segment>\n\t\t\t<Segment clearing>\n\t\t\t\t<span>{activity.description}</span>\n\t\t\t\t<Button \n\t\t\t\t\tas={Link} \n\t\t\t\t\tto={`activities/${activity.id}`}\n\t\t\t\t\tcolor='teal'\n\t\t\t\t\tfloated='right'\n\t\t\t\t\tcontent='View'\n\t\t\t\t/>\n\t\t\t</Segment>\n\t\t</Segment.Group>\n  );\n};\n\nexport default ActivityListItem;\n","import { observer } from 'mobx-react-lite';\nimport { Fragment } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityListItem from './ActivityListItem';\n\nconst ActivityList = () => {\n\tconst {activityStore} = useStore();\n\tconst { groupedActivities } = activityStore;\n\t\n\treturn (\n\t\t<>\n\t\t\t{groupedActivities.map(([group, activities])=>(\n\t\t\t\t<Fragment key={group}>\n\t\t\t\t\t<Header sub color='teal'>\n\t\t\t\t\t\t{group}\n\t\t\t\t\t</Header>\n\t\t\t\t\t{activities.map(activity => (\n\t\t\t\t\t\t<ActivityListItem key={activity.id} activity={activity}/>\n\t\t\t\t\t))}\n\t\t\t\t</Fragment>\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport default observer(ActivityList);","import React, { Fragment } from \"react\";\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\n\nexport default function ActivityListItemPlaceholder() {\n  return (\n    <Fragment>\n      <Placeholder fluid style={{ marginTop: 25 }}>\n        <Segment.Group>\n          <Segment style={{ minHeight: 110 }}>\n            <Placeholder>\n              <Placeholder.Header image>\n                <Placeholder.Line />\n                <Placeholder.Line />\n              </Placeholder.Header>\n              <Placeholder.Paragraph>\n                <Placeholder.Line />\n              </Placeholder.Paragraph>\n            </Placeholder>\n          </Segment>\n          <Segment>\n            <Placeholder>\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder>\n          </Segment>\n          <Segment secondary style={{ minHeight: 70 }} />\n          <Segment clearing>\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\n          </Segment>\n        </Segment.Group>\n      </Placeholder>\n    </Fragment>\n  );\n}\n","import { observer } from 'mobx-react-lite';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { Grid, Loader } from 'semantic-ui-react';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { PagingParams } from '../../../app/models/pagination';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityFilters from './ActivityFilters';\nimport ActivityList from './ActivityList';\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\n\nconst ActivityDashboard = () => {\n\tconst {activityStore} = useStore();\n\tconst {loadActivities, activityRegistry, setPagingParams, pagination} = activityStore;\n\tconst [loadingNext, setLoadingNext] = useState(false);\n\t\n  const handleGetNext = () => {\n    setLoadingNext(true);\n    setPagingParams(new PagingParams(pagination!.currentPage + 1))\n    loadActivities().then(() => setLoadingNext(false));\n  }\n\n  useEffect(() => {\n    if(activityRegistry.size <= 1) loadActivities();\n  }, [activityRegistry.size, loadActivities]);\n\n  // if (activityStore.loadingInitial && !loadingNext) \n  //   return <LoadingComponent content=\"Loading activities...\" />;\n\n\t\n\treturn (\n\t\t<Grid>\n\t\t\t<Grid.Column width='10'>\n        {activityStore.loadingInitial && !loadingNext ? (\n          <>\n            <ActivityListItemPlaceholder />\n            <ActivityListItemPlaceholder />\n          </>\n        ) : (\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={handleGetNext}\n            hasMore={!loadingNext && !!pagination && \n              pagination.currentPage < pagination.totalPages}\n            initialLoad={false}\n          >\n            <ActivityList\t/>\n          </InfiniteScroll>\n        )}\n\t\t\t</Grid.Column>\n\t\t\t<Grid.Column width='6'>\n\t\t\t\t<ActivityFilters />\n\t\t\t</Grid.Column>\n\t\t\t<Grid.Column width={10}>\n        <Loader active = {loadingNext} />\n      </Grid.Column>\n\t\t</Grid>\n\t);\n};\n\nexport default observer(ActivityDashboard);","import { useField } from 'formik';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface Props{\n  placeholder: string;\n  name: string;\n  type?: string;\n  label?: string;\n}\nconst MyTextInput = (props: Props) => {\n  const [field, meta] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <input {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label pointing='above' basic color = 'red'>{meta.error}</Label>\n      ) : null}\n    </Form.Field>\n  );\n};\n\nexport default MyTextInput;","import { ErrorMessage, Form, Formik } from 'formik';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Button, Header, Label } from 'semantic-ui-react';\nimport MyTextInput from '../../app/common/form/MyTextInput';\nimport { useStore } from '../../app/stores/store';\n\nconst LoginForm = () => {\n  const {userStore} = useStore();\n  return (\n    <Formik\n      initialValues={{email:'', password:'', error: null}}\n      onSubmit={(values, {setErrors}) => userStore.login(values).catch(error => \n        setErrors({error: 'Invalid email or password'}))}\n    >\n      {({handleSubmit, isSubmitting, errors })=>(\n        <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n          <Header as='h2' content='Login to Reactivities' color='teal' textAlign='center' />\n          <MyTextInput name='email' placeholder='Email' />\n          <MyTextInput name='password' placeholder='Password' type='password' />\n          <ErrorMessage\n            name='error' render={()=>\n              <Label style={{marginBottom: 10}} basic color='red' content={errors.error}/>}\n          />\n          <Button loading={isSubmitting} positive content='Login' type='submit' fluid />\n        </Form>\n\n      )}\n    </Formik>\n    \n  );\n};\n\nexport default observer(LoginForm);","import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\ninterface Props{\n  errors: any;\n}\n\nconst ValidationErrors = ({errors}:Props) => {\n  return (\n    <Message error>\n      {errors && (\n        <>\n        <Message.List>\n          {errors.map((err:any, i:any)=>(\n            <Message.Item key={i}>{err}</Message.Item>\n          ))}\n        </Message.List>\n        </>\n      )}\n    </Message>\n  );\n};\n\nexport default ValidationErrors;","import { ErrorMessage, Form, Formik } from 'formik';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Button, Header } from 'semantic-ui-react';\nimport MyTextInput from '../../app/common/form/MyTextInput';\nimport { useStore } from '../../app/stores/store';\nimport * as Yup from 'yup';\nimport ValidationErrors from '../errors/ValidationErrors';\n\nconst RegisterForm = () => {\n  const {userStore} = useStore();\n  return (\n    <Formik\n      initialValues={{displayName: '', username: '', email:'', password:'', error: null}}\n      onSubmit={(values, {setErrors}) => userStore.register(values).catch(error => \n        setErrors({error}))} //error:error (key,value same=> skip one)\n      validationSchema = {Yup.object({\n        displayName: Yup.string().required(),\n        username: Yup.string().required(),\n        email: Yup.string().required().email(),\n        password: Yup.string().required(),\n      })}\n    >\n      {({handleSubmit, isSubmitting, errors, isValid, dirty})=>(\n        <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\n          <Header as='h2' content='Sign up to Reactivities' color='teal' textAlign='center' />\n          <MyTextInput name='displayName' placeholder='Display Name' />\n          <MyTextInput name='username' placeholder='Username' />\n          <MyTextInput name='email' placeholder='Email' />\n          <MyTextInput name='password' placeholder='Password' type='password' />\n          <ErrorMessage\n            name='error' render={()=>\n              <ValidationErrors errors={errors.error}/>\n            }\n          />\n          <Button disabled={!isValid || !dirty || isSubmitting} \n            loading={isSubmitting} positive content='Register' type='submit' fluid />\n        </Form>\n\n      )}\n    </Formik>\n    \n  );\n};\n\nexport default observer(RegisterForm);","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Header, Segment, Image, Button } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport LoginForm from \"../users/LoginForm\";\nimport RegisterForm from \"../users/RegisterForm\";\n\nconst HomePage = () => {\n  const { userStore, modalStore } = useStore();\n  return (\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\n      <Container text>\n        <Header as=\"h1\" inverted>\n          <Image\n            size=\"massive\"\n            src=\"/assets/logo.png\"\n            alt=\"logo\"\n            style={{ marginBottom: 12 }}\n          />\n          Reactivities\n        </Header>\n        {userStore.isLoggedIn ? (\n          <>\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\n              Go to Activities!\n            </Button>\n          </>\n        ) : (\n          <>\n            <Button onClick={() => modalStore.openModal(<LoginForm />)} size=\"huge\" inverted>\n              Login!\n            </Button>\n            <Button onClick={() => modalStore.openModal(<RegisterForm />)} size=\"huge\" inverted>\n              Register!\n            </Button>\n          </>\n        )}\n      </Container>\n    </Segment>\n  );\n};\n\nexport default observer(HomePage);\n","import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\ninterface Props{\n\tinverted?: boolean;\n\tcontent?: string;\n}\nconst LoadingComponent = ({inverted=true, content='Loading...'}: Props) => {\n\treturn (\n\t\t<Dimmer active={true} inverted={inverted}>\n\t\t\t<Loader content={content}/>\n\t\t</Dimmer>\n\t);\n};\n\nexport default LoadingComponent;","import { useField } from 'formik';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface Props{\n  placeholder: string;\n  name: string;\n  rows: number;\n  label?: string;\n}\nconst MyTextArea = (props: Props) => {\n  const [field, meta] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <textarea {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label pointing='above' basic color = 'red'>{meta.error}</Label>\n      ) : null}\n    </Form.Field>\n  );\n};\n\nexport default MyTextArea;","import { useField } from 'formik';\nimport { Form, Label, Select } from 'semantic-ui-react';\n\ninterface Props{\n  placeholder: string;\n  name: string;\n  options: any;\n  label?: string;\n}\nconst MySelectInput = (props: Props) => {\n  const [field, meta, helpers] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <Select \n        clearable\n        options={props.options}\n        value={field.value || null}\n        onChange={(e,d) => helpers.setValue(d.value)}\n        onBlur={()=>helpers.setTouched(true)}\n        placeholder={props.placeholder}\n      />\n      {meta.touched && meta.error ? (\n        <Label pointing='above' basic color = 'red'>{meta.error}</Label>\n      ) : null}\n    </Form.Field>\n  );\n};\n\nexport default MySelectInput;","export const categoryOptions = [\n  {text: 'Drinks', value: 'drinks'},\n  {text: 'Culture', value: 'culture'},\n  {text: 'Film', value: 'film'},\n  {text: 'Food', value: 'food'},\n  {text: 'Music', value: 'music'},\n  {text: 'Travel', value: 'travel'},\n]","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label } from 'semantic-ui-react';\nimport DatePicker, {ReactDatePickerProps} from 'react-datepicker';\n\nconst MyDateInput = (props: Partial<ReactDatePickerProps>) => {\n  const [field, meta, helpers] = useField(props.name!);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <DatePicker \n        {...field}\n        {...props}\n        selected={(field.value && new Date(field.value)) || null }\n        onChange={value=>helpers.setValue(value)}\n      />\n      {meta.touched && meta.error ? (\n        <Label pointing='above' basic color = 'red'>{meta.error}</Label>\n      ) : null}\n    </Form.Field>\n  );\n};\n\nexport default MyDateInput;","import { observer } from \"mobx-react-lite\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport { v4 as uuid } from \"uuid\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\nimport { ActivityFormValues } from \"../../../app/models/activity\";\n\nconst ActivityForm = () => {\n  const history = useHistory();\n  const { activityStore } = useStore();\n  const {\n    createActivity, updateActivity, loadActivity, loadingInitial,\n  } = activityStore;\n\n  const { id } = useParams<{ id: string }>();\n  const [activity, setActivity] = useState<ActivityFormValues>(\n    new ActivityFormValues()\n  );\n\n  const validationSchema = Yup.object({\n    title: Yup.string().required(\"The activity title is required\"),\n    description: Yup.string().required(\"The activity description is required\"),\n    category: Yup.string().required(),\n    date: Yup.string().required(\"Date is required\").nullable(),\n    venue: Yup.string().required(),\n    city: Yup.string().required(),\n  });\n\n  useEffect(() => {\n    if (id)\n      loadActivity(id).then((activity) => {\n        setActivity(new ActivityFormValues(activity));\n      });\n  }, [id, loadActivity]);\n\n  const handleFormSubmit = (activity: ActivityFormValues) => {\n    if (!activity.id) {\n      let newActivity = {\n        ...activity,\n        id: uuid(),\n      };\n      createActivity(newActivity).then(() =>\n        history.push(`/activities/${newActivity.id}`)\n      );\n    } else {\n      updateActivity(activity).then(() =>\n        history.push(`/activities/${activity.id}`)\n      );\n    }\n  };\n\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\n\n  return (\n    <Segment clearing>\n      <Header content=\"Activity Detail\" sub color=\"teal\" />\n      <Formik\n        validationSchema={validationSchema}\n        enableReinitialize\n        initialValues={activity}\n        onSubmit={(values) => handleFormSubmit(values)}\n      >\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\n            <MySelectInput\n              options={categoryOptions}\n              placeholder=\"Category\"\n              name=\"category\"\n            />\n            <MyDateInput\n              placeholderText=\"Date\"\n              name=\"date\"\n              showTimeSelect\n              timeCaption=\"time\"\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n            />\n            <Header content=\"Location Detail\" sub color=\"teal\" />\n            <MyTextInput placeholder=\"City\" name=\"city\" />\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\n            <Button\n              disabled={isSubmitting || !dirty || !isValid}\n              loading={isSubmitting}\n              floated=\"right\"\n              positive\n              type=\"submit\"\n              content=\"Submit\"\n            />\n            <Button\n              as={Link}\n              to=\"/activities\"\n              floated=\"right\"\n              type=\"button\"\n              content=\"Cancel\"\n            />\n          </Form>\n        )}\n      </Formik>\n    </Segment>\n  );\n};\n\nexport default observer(ActivityForm);\n","import { Formik, Form, Field, FieldProps } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport * as Yup from 'yup';\nimport { formatDistanceToNow } from \"date-fns/esm\";\n\ninterface Props {\n  activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat({activityId}: Props) {\n  const {commentStore} = useStore();\n  useEffect(()=>{\n    if(activityId){\n      commentStore.createHubConnection(activityId);\n    }\n    return () => {\n      commentStore.clearComments();\n    }\n  }, [commentStore, activityId])\n\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        attached=\"top\"\n        inverted\n        color=\"teal\"\n        style={{ border: \"none\" }}\n      >\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached clearing>\n        <Formik\n          onSubmit={(values, {resetForm}) => \n            commentStore.addComment(values).then(()=>resetForm())}\n          initialValues={{body: ''}}\n          validationSchema={Yup.object({\n            body: Yup.string().required()\n          })}\n        >\n          {({isSubmitting, isValid, handleSubmit}) => (\n            <Form className='ui form'>\n              <Field name='body'>\n                {(props: FieldProps) => (\n                  <div style={{position: 'relative'}}>\n                    <Loader active={isSubmitting} />\n                    <textarea \n                      placeholder='Enter your comment (Enter to submit, SHIFT + enter for new line'\n                      rows={2}\n                      {...props.field}\n                      onKeyPress={e => {\n                        if(e.key === 'Enter' && e.shiftKey){\n                          return;\n                        }\n                        if(e.key === 'Enter' && !e.shiftKey){\n                          e.preventDefault();\n                          isValid && handleSubmit();\n                        }\n                      }}\n                    />\n                  </div>\n                )}\n              </Field>\n            </Form>\n          )}\n        </Formik>\n        <Comment.Group>\n          {commentStore.comments.map(comment => (\n            <Comment key={comment.id}>\n              <Comment.Avatar src={comment.image || '/assets/user.png' } />\n              <Comment.Content>\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`} >\n                  {comment.displayName}\n                </Comment.Author>\n                <Comment.Metadata>\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\n                </Comment.Metadata>\n                <Comment.Text style={{whiteSpace: 'pre-wrap'}} >{comment.body}</Comment.Text>\n              </Comment.Content>\n            </Comment>\n          ))}\n\n        </Comment.Group>\n      </Segment>\n    </>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport {format} from 'date-fns';\nimport { useStore } from \"../../../app/stores/store\";\n\nconst activityImageStyle = {\n  filter: \"brightness(30%)\",\n};\n\nconst activityImageTextStyle = {\n  position: \"absolute\",\n  bottom: \"5%\",\n  left: \"5%\",\n  width: \"100%\",\n  height: \"auto\",\n  color: \"white\",\n};\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\n  const {activityStore: {updateAttendance, loading, cancelActivityToggle}} = useStore();\n  return (\n    <Segment.Group>\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\n        {activity.isCancelled && (\n          <Label style={{position: 'absolute', zIndex: 1000, left: -14, top: 20 }} \n            ribbon color='red' content='Cancelled' />\n        )}\n        <Image\n          src={`/assets/categoryImages/${activity.category}.jpg`}\n          fluid\n          style={activityImageStyle}\n        />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size=\"huge\"\n                  content={activity.title}\n                  style={{ color: \"white\" }}\n                />\n                <p>{format( activity.date!, 'dd MMM yyyy')}</p>\n                <p>\n                  Hosted by \n                  <strong>\n                  {/* <Link to={`/profiles/${activity.host?.displayName}`}> */}\n                  <Link to={`/profiles/${activity.hostUsername}`}>\n                    {activity.host?.displayName}\n                  </Link>\n                  </strong>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached=\"bottom\">\n        {activity.isHost ? (\n          <>\n            <Button \n              color={activity.isCancelled ? 'green' : 'red'}\n              floated='left'\n              basic\n              content={activity.isCancelled ? 'Re-activate Activity' : 'Cancel Activity'}\n              onClick={cancelActivityToggle}\n              loading={loading}\n            />\n            <Button as={Link} \n              disabled = {activity.isCancelled}\n              to={`/manage/${activity.id}`} \n              color=\"orange\" \n              floated=\"right\">\n              Manage Event\n            </Button>\n          </>\n        ) : activity.isGoing ? (\n          <Button loading={loading} onClick={updateAttendance} >Cancel attendance</Button>\n        ) : (\n          <Button \n            disabled={activity.isCancelled}\n            loading={loading} onClick={updateAttendance} color=\"teal\"\n          >\n            Join Activity\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport {format} from 'date-fns';\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment attached=\"top\">\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{activity.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>{format(activity.date!, 'dd MMM yyyy h:mm aa')}</span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>\n              {activity.venue}, {activity.city}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import React from \"react\";\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport { Activity } from \"../../../app/models/activity\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedSidebar({activity: {attendees, host} }: Props) {\n  if(!attendees) return null;\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        style={{ border: \"none\" }}\n        attached=\"top\"\n        secondary\n        inverted\n        color=\"teal\"\n      >\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\n      </Segment>\n      <Segment attached>\n        <List relaxed divided>\n          {attendees.map((attendee) => (\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\n              {attendee.username === host?.username &&\n                <Label\n                  style={{ position: \"absolute\" }}\n                  color=\"orange\"\n                  ribbon=\"right\"\n                >\n                  Host\n                </Label>\n              }\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\n              <Item.Content verticalAlign=\"middle\">\n                <Item.Header as=\"h3\">\n                  <Link to={`/profiles/${attendee.username}`}>\n                    {attendee.displayName}\n                  </Link>\n                </Item.Header>\n                {attendee.following &&\n                <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>}\n              </Item.Content>\n            </Item>\n          ))}\n        </List>\n      </Segment>\n    </>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\nimport ActivitiyDetailedHeader from \"./ActivityDetailedHeader\";\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\nimport ActivityDetailedSideBar from \"./ActivityDetailedSideBar\";\n\nconst ActivityDetails = () => {\n\tconst {activityStore} = useStore();\n\tconst {selectedActivity: activity, loadActivity, loadingInitial, clearSelectedActivity} \n\t\t= activityStore;\n\t\t\n\tconst {id} = useParams<{id:string}>();\n\t\n\tuseEffect(()=>{\n\t\tif (id) loadActivity(id);\n    return () => clearSelectedActivity();\n\t}, [id, loadActivity, clearSelectedActivity]);\n\t\n\t\n\tif(loadingInitial || !activity) return<LoadingComponent/>;//just for prevent type warning\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivitiyDetailedHeader activity={activity} />\n        <ActivityDetailedInfo activity={activity} />\n        <ActivityDetailedChat activityId={activity.id} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityDetailedSideBar activity={activity} />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityDetails);\n","import React, { useState } from \"react\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport ValidationErrors from \"./ValidationErrors\";\n\nconst TestErrors = () => {\n  const baseUrl = process.env.REACT_APP_API_URL;\n  const [errors, setErrors] = useState(null);\n  function handleNotFound() {\n    axios\n      .get(baseUrl + \"buggy/not-found\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadRequest() {\n    axios\n      .get(baseUrl + \"buggy/bad-request\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleValidationError() {\n    axios\n      .post(baseUrl + \"activities\", {})\n      .catch(err => setErrors(err));\n  }\n\n  function handleServerError() {\n    axios\n      .get(baseUrl + \"buggy/server-error\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleUnauthorised() {\n    axios\n      .get(baseUrl + \"buggy/unauthorised\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadGuid() {\n    axios\n      .get(baseUrl + \"activities/notaguid\")\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <>\n      <Header as=\"h1\" content=\"Test Error component\" />\n      <Segment>\n        <Button.Group widths=\"7\">\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\n          <Button onClick={handleBadRequest} content=\"Bad Request\" basic primary />\n          <Button onClick={handleValidationError} content=\"Validation Error\" basic primary />\n          <Button onClick={handleServerError} content=\"Server Error\" basic primary />\n          <Button onClick={handleUnauthorised} content=\"Unauthorised\" basic primary />\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\n        </Button.Group>\n      </Segment>\n      {errors && \n        <ValidationErrors errors = {errors} />\n      }\n    </>\n  );\n}\nexport default TestErrors;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\n\nconst NotFound = () => {\n  return (\n    <Segment placeholder>\n      <Header icon>\n        <Icon name='search' />\n        Oops - 'we've looked everywhere and could not find this.\n      </Header>\n      <Segment.Inline>\n        <Button as={Link} to='/activities' primary>\n          Return to activities page\n        </Button>\n      </Segment.Inline>\n\n    </Segment>\n  );\n};\n\nexport default NotFound;","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Container, Header, Segment } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\n\nconst ServerError = () => {\n  const {commonStore} = useStore();\n  return (\n    <Container>\n      <Header as = 'h1' content='Server Error' />\n      <Header sub as='h5' color='red' content={commonStore.error?.message}/>\n      {commonStore.error?.details &&\n        <Segment>\n          <Header as='h4' content='Stack trace' color='teal' />\n          <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\n        </Segment>\n      }\n    </Container>\n  );\n};\n\nexport default observer(ServerError);","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Modal } from 'semantic-ui-react';\nimport { useStore } from '../../stores/store';\n\nconst ModalContainer = () => {\n  const {modalStore} = useStore();\n  return (\n    <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\n      <Modal.Content>\n        {modalStore.modal.body}\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default observer(ModalContainer);","import { observer } from 'mobx-react-lite';\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\nimport ProfileCard from './ProfileCard';\n\nconst ProfileFollowings = () => {\n  const {profileStore} = useStore();\n  const {profile, followings, loadingFollowings, activeTab} = profileStore;\n  \n  return (\n    <Tab.Pane loading={loadingFollowings}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header \n            floated='left' \n            icon='user' \n            content={activeTab === 3 ? `People followings ${profile?.displayName}` \n              : `People ${profile?.displayName} is following`} \n          />;\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Card.Group itemsPerRow={4}>\n            {followings.map(profile => (\n              <ProfileCard key={profile.username} profile={profile} />\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n};\n\nexport default observer(ProfileFollowings);","import React from 'react';\nimport { Cropper } from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\n\ninterface Props {\n  imagePreview: string;\n  setCropper: (cropper: Cropper) => void;\n}\n\nconst PhotoWidgetCropper = ({imagePreview, setCropper}:Props) => {\n  return (\n    <Cropper \n      src={imagePreview}\n      style={{height: 200, width: '100%'}}\n      initialAspectRatio={1}\n      aspectRatio={1}\n      preview='.img-preview'\n      guides={false}\n      viewMode={1}\n      autoCropArea={1}\n      background={false}\n      onInitialized={cropper => setCropper(cropper)}\n    />\n  );\n};\n\nexport default PhotoWidgetCropper;","import React, {useCallback} from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport { Header, Icon } from 'semantic-ui-react'\n\ninterface Props {\n  setFiles: (files: any) => void;\n}\n\nexport default function PhotoWidgetDropzone({setFiles}: Props) {\n  const dzStyles = {\n    border: 'dashed 3px #eee', \n    borderColor: '#eee',\n    borderRadius: '5px',\n    paddingTop: '30px',\n    textAlign: 'center' as 'center',\n    height: 200\n  }\n\n  const dzActive =  {\n    borderColor: 'green'\n  }\n\n  const onDrop = useCallback(acceptedFiles => {\n    // code of course... why complex?\n    setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })));\n    \n    // my code\n    // setFiles([acceptedFiles[0]]);\n  }, [setFiles])\n  \n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n  return (\n    <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles } >\n      <input {...getInputProps()} />\n      <Icon name='upload' size='huge' />\n      <Header content=\"Drop image here\" />\n    </div>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport { Button, Grid, Header } from 'semantic-ui-react';\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\ninterface Props {\n  loading: boolean;\n  uploadPhoto: (file: Blob) => void;\n}\n\nconst PhotoUploadWidget = ({loading, uploadPhoto}:Props) => {\n  const [files, setFiles] = useState<any>([]);\n  const [cropper, setCropper] = useState<Cropper>();\n  \n  function onCrop() {\n    if(cropper) {\n      cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!) );\n    }\n  }\n  \n  useEffect(()=>{\n    return () => {\n      files.forEach((file:any) => URL.revokeObjectURL(file.preview))\n    }\n  },[files])\n  \n  return (\n    <Grid>\n      <Grid.Column width={4}>\n        <Header sub color='teal' content='Step 1 - Add Photo' />\n        <PhotoWidgetDropzone setFiles={setFiles} />\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header sub color='teal' content='Step 2 - Resize image' />\n        {files && files.length > 0 && (\n          // <Image src={files[0].preview} />\n          <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\n        )}\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header sub color='teal' content='Step 3 - Preview & Upload' />\n        {files && files.length > 0 &&\n        <>\n        <div className='img-preview' style={{minHeight: 200, overflow: 'hidden'}} />\n        <Button.Group widths={2}>\n          <Button loading={loading} onClick={onCrop} positive icon='check' />\n          <Button disabled={loading} onClick={() => setFiles([])} positive icon='close' />\n        </Button.Group>\n\n        </>\n        }\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default PhotoUploadWidget;","import { observer } from 'mobx-react-lite';\nimport React, { SyntheticEvent, useState } from 'react';\nimport { Button, Card, Grid, Header, Image, Tab } from 'semantic-ui-react';\nimport PhotoUploadWidget from '../../app/common/imageUpload/PhotoUploadWidget';\nimport { Photo, Profile } from '../../app/models/profile';\nimport { useStore } from '../../app/stores/store';\n\ninterface Props {\n  profile: Profile;\n}\n\nconst ProfilePhotos = ({profile}: Props) => {\n  const {profileStore: {isCurrentUser, uploadPhoto,  \n    uploading, loading, setMainPhoto, deletePhoto}} = useStore();\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\n  const [target, setTarget] = useState('');\n  function handlePhotoUpload(file: Blob){\n    uploadPhoto(file).then(() => setAddPhotoMode(false))\n  }\n  function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>){\n    setTarget(e.currentTarget.name);\n    setMainPhoto(photo);\n  }\n  function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>){\n    setTarget(e.currentTarget.name);\n    deletePhoto(photo);\n  }\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated='left' icon='image' content='Photos' />\n          {isCurrentUser && (\n            <Button floated='right' basic \n              content={addPhotoMode ? 'Cancel' : 'Add Photo'} \n              onClick={()=>setAddPhotoMode(!addPhotoMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={16}>\n            {addPhotoMode ? (\n              <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading} />\n            ) : (\n              <Card.Group itemsPerRow={5}>\n                {profile.photos?.map((photo => (\n                  <Card key={photo.id}>\n                    <Image src={photo.url} />\n                    {isCurrentUser && (\n                      <Button.Group fluid widths={2}>\n                        <Button\n                          basic\n                          color='green'\n                          content='Main'\n                          name={'main' + photo.id}\n                          disabled={photo.isMain}\n                          loading={target==='main' + photo.id && loading}\n                          onClick={e => handleSetMainPhoto(photo, e)}\n                        />\n                        <Button \n                          basic \n                          color='red' \n                          icon='trash' \n                          name={photo.id}\n                          disabled={photo.isMain}\n                          loading={target===photo.id && loading}\n                          onClick={e=>handleDeletePhoto(photo, e)}\n                        />\n                      </Button.Group>\n                    )}\n                  </Card>\n                )))}\n              </Card.Group>\n            )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n};\n\nexport default observer(ProfilePhotos);","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Tab } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport { useStore } from '../../app/stores/store';\nimport ProfileFollowings from './ProfileFollowings';\nimport ProfilePhotos from './ProfilePhotos';\n\ninterface Props {\n  profile: Profile;\n}\n\nconst ProfileContent = ({profile}: Props) => {\n  const {profileStore} = useStore();\n  const panes = [\n    {menuItem: 'About', render: () => <Tab.Pane>About Content</Tab.Pane>},\n    {menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} /> },\n    {menuItem: 'Events', render: () => <Tab.Pane>Events Content</Tab.Pane>},\n    {menuItem: 'Followers', render: () => <ProfileFollowings />},\n    {menuItem: 'Following', render: () => <ProfileFollowings />},\n  ]\n  return(\n    <Tab \n      menu={{fluid: true, vertical: true}}\n      menuPosition='right'\n      panes={panes}\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\n    />\n\n  );\n};\n\nexport default observer(ProfileContent);","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Divider, Grid, Header, Item, Segment, Statistic } from 'semantic-ui-react';\nimport { Profile } from '../../app/models/profile';\nimport FollowButton from './FollowButton';\n\ninterface Props {\n  profile: Profile;\n}\n\nconst ProfileHeader = ({profile}: Props) => {\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width={12}>\n          <Item.Group>\n            <Item>\n              <Item.Image avatar size='small' src={profile.image || '/assets/user.png'} />\n              <Item.Content verticalAlign='middle'>\n                <Header as='h1' content={profile.displayName} />\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Statistic.Group widths={2}>\n            <Statistic label='Followers' value={profile.followersCount} />\n            <Statistic label='Following' value={profile.followingCount} />\n          </Statistic.Group>\n          <Divider />\n          <FollowButton profile={profile} />\n        </Grid.Column>\n      </Grid> \n    </Segment>\n  );\n};\n\nexport default observer(ProfileHeader);","import { observer } from 'mobx-react-lite';\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { Grid } from 'semantic-ui-react';\nimport LoadingComponent from '../../app/layout/LoadingComponent';\nimport { useStore } from '../../app/stores/store';\nimport ProfileContent from './ProfileContent';\nimport ProfileHeader from './ProfileHeader';\n\nconst ProfilePage = () => {\n  const {username} = useParams<{username: string}>();\n  const {profileStore} = useStore();\n  const {loadingProfile, loadProfile, profile, setActiveTab} = profileStore;\n  \n  useEffect(() => {\n    loadProfile(username);\n    return () => {\n      setActiveTab(0);\n    }\n  }, [loadProfile, username, setActiveTab])\n\n  if(loadingProfile) return <LoadingComponent content='Loading profile...' />\n  \n  return (\n    <Grid>\n      <Grid.Column width={16}>\n        {profile &&\n        <>\n          <ProfileHeader profile={profile} /> \n          <ProfileContent profile={profile} />\n        </>}\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ProfilePage);","import React from 'react';\nimport { Redirect, RouteComponentProps, RouteProps } from 'react-router';\nimport { Route } from 'react-router-dom';\nimport { useStore } from '../stores/store';\n\ninterface Props extends RouteProps {\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n}\n\nconst PrivateRoute = ({component: Component, ...rest}: Props) => {\n  const {userStore: {isLoggedIn}} = useStore();\n  return (\n    <Route \n      {...rest}\n      render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/' /> }\n    />\n  );\n};\n\nexport default PrivateRoute;","import React, { useEffect }  from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Switch, useLocation } from \"react-router\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityForm from \"../../features/activities/from/ActivityForm\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport TestErrors from \"../../features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n\tconst location = useLocation();\n\tconst {commonStore, userStore} = useStore();\n\t\n  useEffect(()=>{\n    if(commonStore.token){\n      userStore.getUser().finally(()=>commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore]);\n  \n  if (!commonStore.appLoaded) return <LoadingComponent content = 'Loading app...' />\n\n  return (\n    <>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n\t\t\t<Route exact path='/' component={HomePage} />\n\t\t\t<Route \n\t\t\t\tpath={'/(.+)'}\n\t\t\t\trender = {()=>(\n\t\t\t\t\t<>\n\t\t\t\t\t<NavBar />\n\t\t\t\t\t<Container style={{ marginTop: \"7em\" }}>\n            <Switch>\n              <PrivateRoute exact path='/activities' component={ActivityDashboard} />\n              <PrivateRoute path='/activities/:id' component={ActivityDetails} />\n              <PrivateRoute key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm} />\n              <PrivateRoute path='/profiles/:username' component={ProfilePage} />\n              <PrivateRoute path='/errors' component={TestErrors} />\n              <Route path='/server-error' component={ServerError} />\n              <Route component={NotFound} />\n            </Switch>\n\t\t\t\t\t</Container>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t/>\n    </>\n  );\n}\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    {/* <BrowserRouter> */}\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}